// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Auth {
  id        Int      @id @unique @default(autoincrement())
  nickname  String?
  email     String   @unique
  hashPass  String
  role      Boolean? @default(false)
  img       String?
  source    String?  @default("form-login")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id        String   @id @unique
  fullname  String
  email     String?  @unique
  tel       String?
  city      String?  @default("valencia")
  img       String?
  notes     String?
  source    String?  @default("form-client")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Ventas    Ventas[]
}

model Product {
  id          String    @id @unique
  fullname    String?
  description String?
  trademark   String?   @default("trifaxic")
  code        String
  serial      String?
  barcode     String?
  sku         String?
  img         String?
  price_base  Float
  delta       Float?    @default(0)
  divisa      String?   @default("usd")
  stock       Int
  unity       String?   @default("1")
  weigth      String?
  dimension   String?
  notes       String?
  tags        String?
  category    String?
  warehouseId Int       @default(0)
  source      String?   @default("form-product")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  Ventas      Ventas[]
}

model Ventas {
  id        String   @id @unique
  client    String
  quantity  Int?     @default(1)
  products  String
  payment   String?
  total     Float    @default(0)
  img       String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  source    String?  @default("form-Ventas")
  Client    Client   @relation(fields: [client], references: [id])
  Product   Product  @relation(fields: [products], references: [id])
}

model Warehouse {
  id        Int       @id @unique @default(autoincrement())
  warehouse String    @default("general")
  products  Product[]
}

model Tasks {
  id        Int      @id @unique @default(autoincrement())
  concept   String
  notes     String?
  amount    Float
  img       String?
  completed Boolean? @default(false)
  debit     Boolean? @default(false)
  initAt    String?
  source    String?  @default("form-finance")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hanyu {
  id        String   @id @unique
  hanzi     String
  pinyin    String
  xinbanya  String
  tone      String?
  img       String?
  source    String?  @default("form-hanyu")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id        String   @id @unique
  title     String
  content   String
  author    String?  @default("t√©cnico seguridad")
  img       String?
  source    String?  @default("form-blog")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Log {
  id        Int      @id @unique @default(autoincrement())
  ip        String?
  context   String
  notes     String
  error     Boolean? @default(false)
  img       String?
  source    String?  @default("form-log")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ListEmail {
  id        Int      @id @default(autoincrement())
  fullname  String?
  email     String?
  tel       String?
  message   String?
  source    String?  @default("form-list-email")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
